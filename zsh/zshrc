# Path to your oh-my-zsh installation.
if [[ "$(uname)" == "Darwin" ]]
then
    USERNAME=`whoami`
    export ZSH=/Users/$USERNAME/.oh-my-zsh
    # Would you like to use another custom folder than $ZSH/custom?
    ZSH_CONFIG_FILE=`greadlink -f ~/.zshrc`
    ZSH_CONFIG_DIR=`dirname $ZSH_CONFIG_FILE`
    ZSH_CUSTOM=$ZSH_CONFIG_DIR
    source /Users/$USERNAME/.iterm2_shell_integration.zsh

elif [[ "$(uname)" == "Linux" ]]
then
    USERNAME=`whoami`
    export ZSH=/home/$USERNAME/.oh-my-zsh
    # Would you like to use another custom folder than $ZSH/custom?
    ZSH_CONFIG_FILE=`readlink -f ~/.zshrc`
    ZSH_CONFIG_DIR=`dirname $ZSH_CONFIG_FILE`
    ZSH_CUSTOM=$ZSH_CONFIG_DIR
    export SHELL=/bin/zsh
fi

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.

ZSH_THEME="powerlevel10k/powerlevel10k"
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
DEFAULT_USER=${USER}

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=15

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"


# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker oc zsh-autosuggestions zsh-history-substring-search zsh-completions zsh-syntax-highlighting)
# User configuration

source $ZSH/oh-my-zsh.sh

# Export Lang
export LANG=en_AU.UTF-8

# Enable Ctrl-x-e to edit command line
fpath=(~/.oh-my-zsh/custom/plugins/oc $fpath)
autoload -U edit-command-line
autoload -U compinit && compinit

# Emacs style
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -s '^x^f' 'emacsclient -t $(fzf)\n'
bindkey -s '^f^v' ' | peco | pbcopy\n'

source $ZSH_CUSTOM/zshalias

if [[ "$(uname)" == "Darwin" ]]
then
    # Enable autojump
    [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

elif [[ "$(uname)" == "Linux" ]]
then
    . /usr/share/autojump/autojump.sh
    unset rvm_path
    source /home/$USERNAME/.rvm/scripts/rvm
fi

# Do not record duplicate in your history
export HISTCONTROL=ignoreboth:erasedups
export HISTORY_IGNORE="(ls|cd|pwd)";
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_BEEP

eval "$(direnv hook zsh)"

# Configure virtualenv and pyenv
if which pyenv > /dev/null;
then
    eval "$(pyenv init -)";
fi

if which pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)";
fi

# autojump
eval "$(fasd --init auto)"

_fzf_compgen_path() {
  ag -g "" "$1"
}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# nvm
export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh

# kubernetes aliases
[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# Start gpg-agent
gpgconf --launch gpg-agent
