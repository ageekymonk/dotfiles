# Export Lang
export LANG=en_AU.UTF-8

# Path to your oh-my-zsh installation.
if [[ "$(uname)" == "Darwin" ]]
then
    USERNAME=`whoami`
    # export ZSH=/Users/$USERNAME/.oh-my-zsh
    # Would you like to use another custom folder than $ZSH/custom?
    ZSH_CONFIG_FILE=`greadlink -f ~/.zshrc`
    ZSH_CONFIG_DIR=`dirname $ZSH_CONFIG_FILE`
    ZSH_CUSTOM=$ZSH_CONFIG_DIR
    source /Users/$USERNAME/.iterm2_shell_integration.zsh
    # source $HOMEBREW_PREFIX/opt/zinit/zinit.zsh
    . $HOMEBREW_PREFIX/etc/profile.d/z.sh
    export AWS_VAULT_BACKEND=keychain

elif [[ "$(uname)" == "Linux" ]]
then
    USERNAME=`whoami`
    # export ZSH=/home/$USERNAME/.oh-my-zsh
    # Would you like to use another custom folder than $ZSH/custom?
    ZSH_CONFIG_FILE=`readlink -f ~/.zshrc`
    ZSH_CONFIG_DIR=`dirname $ZSH_CONFIG_FILE`
    ZSH_CUSTOM=$ZSH_CONFIG_DIR
    export SHELL=/bin/zsh
    export AWS_VAULT_BACKEND=pass
fi

# Oh My ZSH Configuration
# CASE_SENSITIVE="true"
# UPDATE_ZSH_DAYS=15
# ENABLE_CORRECTION="false"
# COMPLETION_WAITING_DOTS="true"
# DISABLE_UNTRACKED_FILES_DIRTY="true"
# HIST_STAMPS="mm/dd/yyyy"

autoload -Uz bashcompinit
bashcompinit

autoload -Uz compinit
compinit

# (( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit installer's chunk

DEFAULT_USER=${USER}

# User configuration

eval "$(atuin init zsh)"
eval "$(starship init zsh)"
eval "$(zoxide init zsh)"

# Do not record duplicate in your history
export HISTCONTROL=ignoreboth:erasedups
export HISTORY_IGNORE="(ls|cd|pwd| *)";
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_BEEP
setopt autocd

HISTSIZE=1000000
SAVEHIST=1000000
HISTFILE=~/.zsh_history

# fzf

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
[ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh

_fzf_compgen_path() {
  ag -g "" "$1"
}

# Start gpg-agent
gpgconf --launch gpg-agent

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH="/usr/local/opt/mysql-client/bin:$PATH"

export PATH="$PATH:$HOME/.bash-my-aws/bin"
source ~/.bash-my-aws/aliases
source ~/.bash-my-aws/bash_completion.sh

source $ZSH_CUSTOM/zshalias
export PATH="$PATH:${BMA_HOME:-$HOME/.bash-my-aws}/bin"
source ${BMA_HOME:-$HOME/.bash-my-aws}/aliases


fpath=(${ASDF_DIR}/completions $fpath)

# Enable Ctrl-x-e to edit command line
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

source ${BMA_HOME:-$HOME/.bash-my-aws}/bash_completion.sh

# Emacs style
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^xe' edit-command-line '^x^e' edit-command-line
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -s '^f^v' ' | peco | pbcopy\n'

# Modules
autoload -Uz allopt zed zmv zcalc colors

autoload -Uz select-word-style
select-word-style shell

autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic
[ -f "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env" ] && source "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
# export PATH="/usr/local/opt/ruby/bin:$PATH"

_python_argcomplete() {
    local IFS=$'\013'
    local SUPPRESS_SPACE=0
    if compopt +o nospace 2> /dev/null; then
        SUPPRESS_SPACE=1
    fi
    COMPREPLY=( $(IFS="$IFS" \
                     COMP_LINE="$COMP_LINE" \
                     COMP_POINT="$COMP_POINT" \
                     COMP_TYPE="$COMP_TYPE" \
                     _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
                     _ARGCOMPLETE=1 \
                     _ARGCOMPLETE_SUPPRESS_SPACE=$SUPPRESS_SPACE \
                     "$1" 8>&1 9>&2 1>/dev/null 2>/dev/null) )
    if [[ $? != 0 ]]; then
        unset COMPREPLY
    elif [[ $SUPPRESS_SPACE == 1 ]] && [[ "$COMPREPLY" =~ [=/:]$ ]]; then
        compopt -o nospace
    fi
}
complete -o nospace -o default -o bashdefault -F _python_argcomplete "az"
fpath+=${ZDOTDIR:-~}/.zsh_functions


eval "$(direnv hook zsh)"

export REDO_HISTORY_PATH=~/.zsh_history
# source "$(redo alias-file)"
# source <(konf-go shellwrapper zsh)

# bindkey -s '^q' 'redo^M'
# This is for aws cli
export PAGER=
# export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# bun completions
[ -s "/home/ramz/.local/share/reflex/bun/_bun" ] && source "/home/ramz/.local/share/reflex/bun/_bun"

# bun
export BUN_INSTALL="$HOME/.local/share/reflex/bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH="$HOME/.ghcup/bin:$PATH"
source /etc/profile.d/google-cloud-cli.sh
